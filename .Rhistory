lo.neu.sur_n_RT, lo.neu.sur_p_RT)
lo.emo.resp <- gather(data, key = "Condition", value =  "ReactionTime",
lo.emo.sur_n_RT, lo.emo.sur_p_RT)
hi.neu.resp <- gather(data, key = "Condition", value =  "ReactionTime",
hi.neu.sur_n_RT, hi.neu.sur_p_RT)
hi.emo.resp <- gather(data, key = "Condition", value =  "ReactionTime",
hi.emo.sur_n_RT, hi.emo.sur_p_RT)
lo.neu.resp$Condition <- as.factor(lo.neu.resp$Condition)
lo.emo.resp$Condition <- as.factor(lo.emo.resp$Condition)
hi.neu.resp$Condition <- as.factor(hi.neu.resp$Condition)
hi.emo.resp$Condition <- as.factor(hi.emo.resp$Condition)
lo.neu.resp.plot <- ggplot(lo.neu.resp, aes(Condition, ReactionTime, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
lo.emo.resp.plot <- ggplot(lo.emo.resp, aes(Condition, ReactionTime, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.neu.resp.plot <- ggplot(hi.neu.resp, aes(Condition, ReactionTime, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.emo.resp.plot <- ggplot(hi.emo.resp, aes(Condition, ReactionTime, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
# lo.neu.resp.plot
# hi.neu.resp.plot
# lo.emo.resp.plot
# hi.emo.resp.plot
# lo.neu.resp.plot
lo.neu.resp.plot
# hi.neu.resp.plot
lo.emo.resp.plot
# hi.neu.resp.plot
hi.neu.resp.plot
# hi.emo.resp.plot
hi.emo.resp.plot
###  MAD analyses ###
### check for normality ###
shapiro.test(data$lo.emo.sur_MAD) # barely normal (p = .054)
shapiro.test(data$hi.emo.sur_MAD) # barely normal (p = .08)
shapiro.test(data$lo.neu.sur_MAD) # normal
shapiro.test(data$hi.neu.sur_MAD) # normal
results.long <- gather(data, key = "Condition", value = "MAD",
lo.emo.sur_MAD, hi.emo.sur_MAD, lo.neu.sur_MAD, hi.neu.sur_MAD)
results.long$load <- ifelse(results.long$Condition == "lo.emo.sur_MAD", "Low",
ifelse(results.long$Condition == "lo.neu.sur_MAD", "Low", "High"))
results.long$type <- ifelse(results.long$Condition == "lo.emo.sur_MAD", "Emo",
ifelse(results.long$Condition == "hi.emo.sur_MAD", "Emo", "Neu"))
MAD.anova <- aov(MAD ~ load * type, data = results.long)
summary.aov(MAD.anova)
friedman.test(MAD ~ Condition|subjID, data = results.long)
wilcox.test(data$lo.emo.sur_MAD, data$hi.emo.sur_MAD)
wilcox.test(data$lo.emo.sur_MAD, data$hi.neu.sur_MAD)
wilcox.test(data$lo.emo.sur_MAD, data$lo.neu.sur_MAD)
wilcox.test(data$lo.emo.sur_MAD, data$hi.emo.sur_MAD)
wilcox.test(data$lo.emo.sur_MAD, data$hi.neu.sur_MAD)
wilcox.test(data$lo.emo.sur_MAD, data$lo.neu.sur_MAD)
wilcox.test(data$hi.emo.sur_MAD, data$lo.neu.sur_MAD)
wilcox.test(data$lo.neu.sur_MAD, data$hi.neu.sur_MAD)
wilcox.test(data$hi.emo.sur_MAD, data$lo.neu.sur_MAD)
wilcox.test(data$lo.neu.sur_MAD, data$hi.neu.sur_MAD)
summary.aov(MAD.anova)
ggplot(MAD.long, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
MAD.long <- gather(data, key = "Condition", value = "MAD",
lo.emo.sur_MAD, hi.emo.sur_MAD, lo.neu.sur_MAD, hi.neu.sur_MAD)
MAD.long <- gather(data, key = "Condition", value = "MAD",
lo.emo.sur_MAD, hi.emo.sur_MAD, lo.neu.sur_MAD, hi.neu.sur_MAD)
MAD.long$load <- ifelse(MAD.long$Condition == "lo.emo.sur_MAD", "Low",
ifelse(MAD.long$Condition == "lo.neu.sur_MAD", "Low", "High"))
MAD.long$load <- ifelse(MAD.long$Condition == "lo.emo.sur_MAD", "Low",
ifelse(MAD.long$Condition == "lo.neu.sur_MAD", "Low", "High"))
MAD.long$type <- ifelse(MAD.long$Condition == "lo.emo.sur_MAD", "Emo",
ifelse(MAD.long$Condition == "hi.emo.sur_MAD", "Emo", "Neu"))
MAD.anova <- aov(MAD ~ load * type, data = MAD.long)
summary.aov(MAD.anova)
ggplot(MAD.long, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean") +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
MAD.anova <- tidy(MAD.anova)
View(MAD.anova)
shapiro.test(data$lo.emo.sur_n_MAD)
shapiro.test(data$lo.emo.sur_p_MAD)
shapiro.test(data$lo.emo.sur_n_MAD)
### assess for normality ###
shapiro.test(data$lo.neu.sur_n_MAD) ## non-normal
shapiro.test(data$lo.neu.sur_p_MAD) ## normal
shapiro.test(data$hi.neu.sur_n_MAD) ## non-normal
shapiro.test(data$hi.neu.sur_p_MAD) ## normal
shapiro.test(data$lo.emo.sur_n_MAD) ## non-normal
shapiro.test(data$lo.emo.sur_p_MAD) ## non-normal
shapiro.test(data$hi.emo.sur_n_MAD) ## barely normal
shapiro.test(data$hi.emo.sur_p_MAD) ## non-normal
### t-test for pos ratings vs. neg ratings
wilcox.test(data$lo.neu.sur_n_RT, data$lo.neu.sur_p_RT, paired = TRUE)
### t-test for pos ratings vs. neg ratings
wilcox.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE)
wilcox.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE)
wilcox.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE)
wilcox.test(data$hi.emo.sur_n_MAD, data$hi.emo.sur_p_MAD, paired = TRUE)
### t-test for pos ratings vs. neg ratings
wilcox.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE)
wilcox.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE)
wilcox.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE)
wilcox.test(data$hi.emo.sur_n_MAD, data$hi.emo.sur_p_MAD, paired = TRUE)
### make long ###
lo.neu.resp.MAD <- gather(data, key = "Condition", value =  "MAD",
lo.neu.sur_n_MAD, lo.neu.sur_p_MAD)
lo.emo.resp.MAD  <- gather(data, key = "Condition", value =  "MAD",
lo.emo.sur_n_MAD, lo.emo.sur_p_MAD)
hi.neu.resp.MAD  <- gather(data, key = "Condition", value =  "MAD",
hi.neu.sur_n_MAD, hi.neu.sur_p_MAD)
hi.emo.resp.MAD  <- gather(data, key = "Condition", value =  "MAD",
hi.emo.sur_n_MAD, hi.emo.sur_p_MAD)
lo.neu.resp.MAD$Condition <- as.factor(lo.neu.resp$Condition)
lo.emo.resp.MAD$Condition <- as.factor(lo.emo.resp$Condition)
hi.neu.resp.MAD$Condition <- as.factor(hi.neu.resp$Condition)
hi.emo.resp.MAD$Condition <- as.factor(hi.emo.resp$Condition)
lo.neu.resp.MAD.plot <- ggplot(lo.neu.resp, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
lo.emo.resp.MAD.plot <- ggplot(lo.emo.resp, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.neu.resp.MAD.plot <- ggplot(hi.neu.resp, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.emo.resp.MAD.plot <- ggplot(hi.emo.resp, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
lo.neu.resp.MAD.plot
### make long ###
lo.neu.resp.MAD <- gather(data, key = "Condition", value =  "MAD",
lo.neu.sur_n_MAD, lo.neu.sur_p_MAD)
lo.emo.resp.MAD  <- gather(data, key = "Condition", value =  "MAD",
lo.emo.sur_n_MAD, lo.emo.sur_p_MAD)
hi.neu.resp.MAD  <- gather(data, key = "Condition", value =  "MAD",
hi.neu.sur_n_MAD, hi.neu.sur_p_MAD)
hi.emo.resp.MAD  <- gather(data, key = "Condition", value =  "MAD",
hi.emo.sur_n_MAD, hi.emo.sur_p_MAD)
lo.neu.resp.MAD.plot <- ggplot(lo.neu.resp.MAD, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
lo.emo.resp.MAD.plot <- ggplot(lo.emo.resp.MAD, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.neu.resp.MAD.plot <- ggplot(hi.neu.resp.MAD, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.emo.resp.MAD.plot <- ggplot(hi.emo.resp.MAD, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
lo.neu.resp.MAD.plot
lo.neu.resp.MAD.plot
lo.emo.resp.MAD.plot
lo.emo.resp.MAD.plot
hi.neu.resp.MAD.plot
hi.emo.resp.MAD.plot
### t-test for pos ratings vs. neg ratings
wilcox.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE) ### different
lo.neu.resp.MAD.plot
wilcox.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE) ### trending
hi.neu.resp.MAD.plot
wilcox.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
hi.neu.resp.MAD.plot
lo.emo.resp.MAD.plot
wilcox.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
wilcox.test(data$hi.emo.sur_n_MAD, data$hi.emo.sur_p_MAD, paired = TRUE) ### non-sig
hi.emo.resp.MAD.plot
lo.neu.resp.MAD.plot
lo.emo.resp.MAD.plot
hi.neu.resp.MAD.plot
hi.emo.resp.MAD.plot
### make MAD wide ###
sur.pos.wideMAD <- sur.pos.MTresults2 %>% spread(cond.load, MAD)
#write.csv(subRTs, "~/Desktop/subrts.csv")
### group by sur-pos vs sur-neg ###
sur.MTresults2 <- subset(MT.results2, cond.correct == "Surprise")
sur.pos.MTresults2 <- subset(sur.MTresults2, rate == 0)
sur.neg.MTresults2 <- subset(sur.MTresults2, rate == 1)
library(yarrr)
### make MAD wide ###
sur.pos.wideMAD <- sur.pos.MTresults2 %>% spread(cond.load, MAD)
sur.pos.wideMAD <- (ddply(sur.pos.wideMAD, "subjID", summarise,
hi.em.sur.MAD.p = mean(HiEmoSurprise, na.rm = TRUE),
lo.em.sur.MAD.p = mean(LoEmoSurprise, na.rm = TRUE),
hi.neu.sur.MAD.p = mean(HiNeuSurprise, na.rm = TRUE),
lo.neu.sur.MAD.p = mean(LoNeuSurprise, na.rm = TRUE),
LOW.surp.MAD.p = mean(c(LoNeuSurprise,LoEmoSurprise), na.rm = TRUE),
HI.surp.MAD.p = mean(c(HiNeuSurprise,HiEmoSurprise), na.rm = TRUE),
NEU.surp.MAD.p = mean(c(LoNeuSurprise,HiNeuSurprise), na.rm = TRUE),
EMO.surp.MAD.p = mean(c(LoEmoSurprise,HiEmoSurprise), na.rm = TRUE),
lo.emo.sur_p_RT = mean(lo.emo.sur_p_RT, na.rm = TRUE),
hi.emo.sur_p_RT = mean(hi.emo.sur_p_RT, na.rm = TRUE),
lo.neu.sur_p_RT = mean(lo.neu.sur_p_RT, na.rm = TRUE),
hi.neu.sur_p_RT = mean(hi.neu.sur_p_RT, na.rm = TRUE)))
View(sur.pos.wideMAD)
### set working directory to MouseTrap Demo folder ###
setwd("/Users/nicholasharp/Documents/Nick-Grad/Neta_Lab/depletion_study/study2/Analyses/WorkingMemoryLoads")
if (!require("processx")) install.packages("processx")
### load the packages... This needs to be done every time. ###
{suppressPackageStartupMessages(library(mousetrap))
suppressPackageStartupMessages(library(foreach))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(readbulk))
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library(utils))
suppressPackageStartupMessages(library(stats))
suppressPackageStartupMessages(library(pracma))
suppressPackageStartupMessages(library(tidyr))
suppressPackageStartupMessages(library(magrittr))
suppressPackageStartupMessages(library(graphics))
suppressPackageStartupMessages(library(grDevices))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(psych))
suppressPackageStartupMessages(library(Rcpp))
suppressPackageStartupMessages(library(diptest))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(cstab))
suppressPackageStartupMessages(library(fastcluster))
suppressPackageStartupMessages(library(parallel))
suppressPackageStartupMessages(library(fields))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(yarrr))
}
knit_with_parameters('~/Documents/Nick-Grad/Neta_Lab/depletion_study/study2/Analyses/WorkingMemoryLoads/Manuscript/Manuscript.Rmd')
library("papaja")
data <- read.csv("~/Documents/Nick-Grad/Neta_Lab/depletion_study/study2/Analyses/WorkingMemoryLoads/Data/Cleaned_Data/Final.Data.csv_2019-08-14_08-52-46.csv")
### make data long ###
friedman.data <- gather(data, key = "Condition", value = "Percent Negative Ratings",
lo.neu.sur_rate, hi.neu.sur_rate, lo.emo.sur_rate, hi.emo.sur_rate)
aov.data <- friedman.data
aov.data$load <- recode(aov.data$Condition, "lo.neu.sur_rate" = "low",
"hi.neu.sur_rate", "high",
"lo.emo.sur_rate", "low",
"hi.emo.sur_rate", "high")
aov.data$load <- recode(aov.data$Condition, "lo.neu.sur_rate" = "low",
"hi.neu.sur_rate"= "high",
"lo.emo.sur_rate"= "low",
"hi.emo.sur_rate"= "high")
View(aov.data)
aov.data$type <- recode(aov.data$Condition, "lo.neu.sur_rate" = "neu",
"hi.neu.sur_rate"= "neu",
"lo.emo.sur_rate"= "emo",
"hi.emo.sur_rate"= "emo")
summary(aov(`Percent Negative Ratings` ~ Load * Type, data = aov.data))
summary(aov(`Percent Negative Ratings` ~ load * type, data = aov.data))
### assess normality ###
shapiro.test(data$lo.neu.sur_rate) # non-normal
shapiro.test(data$hi.neu.sur_rate) # non-normal
shapiro.test(data$lo.emo.sur_rate) # non-normal
shapiro.test(data$hi.emo.sur_rate) # non-normal
### make data long ###
friedman.data <- gather(data, key = "Condition", value = "Percent Negative Ratings",
lo.neu.sur_rate, hi.neu.sur_rate, lo.emo.sur_rate, hi.emo.sur_rate)
### run Friedman's test and store results ###
friedman.results <- friedman.test(`Percent Negative Ratings` ~ Condition|subjID, data = friedman.data)
### Follow up wilcoxon tests ###
lo.emo.v.lo.neu <- wilcox_test(data$lo.emo.sur_rate, data$lo.neu.sur_rate, paired = TRUE, conf.int = TRUE)
lo.emo.v.hi.neu <- wilcox_test(data$lo.emo.sur_rate, data$hi.neu.sur_rate, paired = TRUE, conf.int = TRUE)
lo.emo.v.hi.emo <- wilcox_test(data$lo.emo.sur_rate, data$hi.emo.sur_rate, paired = TRUE, conf.int = TRUE)
### import z score updated function ###
source("~/Documents/Nick-Grad/Neta_Lab/depletion_study/study2/Analyses/WorkingMemoryLoads/wilcox_test.R")
### Follow up wilcoxon tests ###
lo.emo.v.lo.neu <- wilcox_test(data$lo.emo.sur_rate, data$lo.neu.sur_rate, paired = TRUE, conf.int = TRUE)
### Follow up wilcoxon tests ###
lo.emo.v.lo.neu <- wilcox_test(data$lo.emo.sur_rate, data$lo.neu.sur_rate, paired = TRUE, conf.int = TRUE)
lo.emo.v.hi.neu <- wilcox_test(data$lo.emo.sur_rate, data$hi.neu.sur_rate, paired = TRUE, conf.int = TRUE)
lo.emo.v.hi.emo <- wilcox_test(data$lo.emo.sur_rate, data$hi.emo.sur_rate, paired = TRUE, conf.int = TRUE)
hi.emo.v.hi.neu <- wilcox_test(data$hi.emo.sur_rate, data$hi.neu.sur_rate, paired = TRUE, conf.int = TRUE)
lo.neu.v.hi.neu <- wilcox_test(data$hi.neu.sur_rate, data$lo.neu.sur_rate, paired = TRUE, conf.int = TRUE)
## assess normality ###
shapiro.test(data$lo.neu.sur_RT)
shapiro.test(data$hi.neu.sur_RT)
shapiro.test(data$lo.emo.sur_RT)
## assess normality ###
shapiro.test(data$lo.neu.sur_RT)
shapiro.test(data$hi.neu.sur_RT)
shapiro.test(data$lo.emo.sur_RT)
shapiro.test(data$hi.emo.sur_RT)
### make long ###
data.long <- gather(data, key = "Condition", value = "ReactionTime",
lo.neu.sur_RT, hi.neu.sur_RT,
lo.emo.sur_RT, hi.emo.sur_RT)
### make factors ###
data.long$Load <- ifelse(data.long$Condition == "lo.neu.sur_RT", "Low",
ifelse(data.long$Condition == "lo.emo.sur_RT", "Low",
ifelse(data.long$Condition == "hi.neu.sur_RT", "High",
ifelse(data.long$Condition == "hi.emo.sur_RT", "High", ""))))
data.long$Type <- ifelse(data.long$Condition == "lo.neu.sur_RT", "Neutral",
ifelse(data.long$Condition == "lo.emo.sur_RT", "Emotional",
ifelse(data.long$Condition == "hi.neu.sur_RT", "Neutral",
ifelse(data.long$Condition == "hi.emo.sur_RT", "Emotional", ""))))
### make w/in subjs factors ###
data.long$subjID <- as.factor(data.long$subjID)
### traditional ANOVA ###
RTaov <- with(data.long,
aov(ReactionTime ~ (Load * Type) +
Error(subjID / (Load * Type))), contrasts = contr.sum())
summary(RTaov)
RTaov <- tidy(RTaov)
library(tidyverse)
RTaov <- tidy(RTaov)
suppressPackageStartupMessages(library(broom))
RTaov <- tidy(RTaov)
summary(RTaov)
### traditional ANOVA ###
RTaov <- with(data.long,
aov(ReactionTime ~ (Load * Type) +
Error(subjID / (Load * Type))), contrasts = contr.sum())
summary(RTaov)
### assess for normality ###
shapiro.test(data$lo.neu.sur_n_RT) ## non-normal
shapiro.test(data$lo.neu.sur_p_RT) ## normal
shapiro.test(data$hi.neu.sur_n_RT) ## non-normal
shapiro.test(data$hi.neu.sur_p_RT) ## normal
shapiro.test(data$lo.emo.sur_n_RT) ## non-normal
### t-test for pos ratings vs. neg ratings
lo.neu.RT.pvn <- wilcox.test(data$lo.neu.sur_n_RT, data$lo.neu.sur_p_RT, paired = TRUE)
wilcox.test(data$hi.neu.sur_n_RT, data$hi.neu.sur_p_RT, paired = TRUE)
wilcox.test(data$lo.emo.sur_n_RT, data$lo.emo.sur_p_RT, paired = TRUE)
wilcox.test(data$hi.emo.sur_n_RT, data$hi.emo.sur_p_RT, paired = TRUE)
### t-test for pos ratings vs. neg ratings
lo.neu.RT.pvn <- wilcox.test(data$lo.neu.sur_n_RT, data$lo.neu.sur_p_RT, paired = TRUE)
View(lo.neu.RT.pvn)
wilcox_test(data$hi.neu.sur_n_RT, data$hi.neu.sur_p_RT, paired = TRUE)
wilcox_test(data$hi.neu.sur_n_RT, data$hi.neu.sur_p_RT, paired = TRUE, conf.int = TRUE)
ls <- wilcox_test(data$hi.neu.sur_n_RT, data$hi.neu.sur_p_RT, paired = TRUE, conf.int = TRUE)
### t-test for pos ratings vs. neg ratings
lo.neu.RT.pvn <- wilcox.test(data$lo.neu.sur_n_RT, data$lo.neu.sur_p_RT, paired = TRUE)
wilcox.test(data$hi.neu.sur_n_RT, data$hi.neu.sur_p_RT, paired = TRUE)
wilcox.test(data$lo.emo.sur_n_RT, data$lo.emo.sur_p_RT, paired = TRUE)
###  MAD analyses ###
### check for normality ###
shapiro.test(data$lo.emo.sur_MAD) # not normal (p = .024)
shapiro.test(data$hi.emo.sur_MAD) # barely normal (p = .09)
shapiro.test(data$lo.neu.sur_MAD) # normal
shapiro.test(data$hi.neu.sur_MAD) # normal
MAD.long <- gather(data, key = "Condition", value = "MAD",
lo.emo.sur_MAD, hi.emo.sur_MAD, lo.neu.sur_MAD, hi.neu.sur_MAD)
MAD.long$load <- ifelse(MAD.long$Condition == "lo.emo.sur_MAD", "Low",
ifelse(MAD.long$Condition == "lo.neu.sur_MAD", "Low", "High"))
MAD.long$type <- ifelse(MAD.long$Condition == "lo.emo.sur_MAD", "Emo",
ifelse(MAD.long$Condition == "hi.emo.sur_MAD", "Emo", "Neu"))
MAD.anova <- aov(MAD ~ load * type, data = MAD.long)
summary.aov(MAD.anova)
### assess for normality ###
shapiro.test(data$lo.neu.sur_n_MAD) ## non-normal
shapiro.test(data$lo.neu.sur_p_MAD) ## non-normal
shapiro.test(data$hi.neu.sur_n_MAD) ## barely normal (.058)
shapiro.test(data$hi.neu.sur_p_MAD) ## normal
shapiro.test(data$lo.emo.sur_n_MAD) ## non-normal
shapiro.test(data$lo.emo.sur_p_MAD) ## barely normal (.068)
shapiro.test(data$hi.emo.sur_n_MAD) ## non-normal
shapiro.test(data$hi.emo.sur_p_MAD) ## normal
### t-test for pos ratings vs. neg ratings
wilcox.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE) ### different
wilcox.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE) ### trending
wilcox.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
wilcox.test(data$hi.emo.sur_n_MAD, data$hi.emo.sur_p_MAD, paired = TRUE) ### non-sig
t.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE) ### different
t.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE) ### trending
t.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
t.test(data$hi.emo.sur_n_MAD, data$hi.emo.sur_p_MAD, paired = TRUE) ### non-sig
### assess for normality ###
shapiro.test(data$lo.neu.sur_n_MAD) ## non-normal
### assess for normality ###
shapiro.test(data$lo.neu.sur_n_MAD) ## non-normal
shapiro.test(data$lo.neu.sur_p_MAD) ## non-normal
shapiro.test(data$lo.neu.sur_p_MAD) ## non-normal
shapiro.test(data$lo.neu.sur_p_MAD) ## non-normal
shapiro.test(data$hi.neu.sur_n_MAD) ## barely normal (.058)
shapiro.test(data$hi.neu.sur_p_MAD) ## normal
shapiro.test(data$lo.emo.sur_n_MAD) ## non-normal
shapiro.test(data$lo.emo.sur_p_MAD) ## barely normal (.068)
shapiro.test(data$hi.emo.sur_n_MAD) ## non-normal
shapiro.test(data$hi.emo.sur_p_MAD) ## normal
t.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE) ### different
t.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE) ### trending
t.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
t.test(data$hi.emo.sur_n_MAD, data$hi.emo.sur_p_MAD, paired = TRUE) ### non-sig
### make long ###
lo.neu.resp.MAD <- gather(data, key = "Condition", value =  "MAD",
lo.neu.sur_n_MAD, lo.neu.sur_p_MAD)
lo.emo.resp.MAD  <- gather(data, key = "Condition", value =  "MAD",
lo.emo.sur_n_MAD, lo.emo.sur_p_MAD)
hi.neu.resp.MAD  <- gather(data, key = "Condition", value =  "MAD",
hi.neu.sur_n_MAD, hi.neu.sur_p_MAD)
hi.emo.resp.MAD  <- gather(data, key = "Condition", value =  "MAD",
hi.emo.sur_n_MAD, hi.emo.sur_p_MAD)
lo.neu.resp.MAD$Condition <- as.factor(lo.neu.resp$Condition)
lo.emo.resp.MAD$Condition <- as.factor(lo.emo.resp$Condition)
hi.emo.resp.MAD$Condition <- as.factor(hi.emo.resp$Condition)
lo.neu.resp.MAD$Condition <- as.factor(lo.neu.resp$Condition)
lo.neu.resp.MAD$Condition <- as.factor(lo.neu.resp.MAD$Condition)
lo.emo.resp.MAD$Condition <- as.factor(lo.emo.resp.MAD$Condition)
hi.neu.resp.MAD$Condition <- as.factor(hi.neu.resp.MAD$Condition)
hi.emo.resp.MAD$Condition <- as.factor(hi.emo.resp.MAD$Condition)
lo.neu.resp.MAD.plot <- ggplot(lo.neu.resp.MAD, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
lo.emo.resp.MAD.plot <- ggplot(lo.emo.resp.MAD, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.neu.resp.MAD.plot <- ggplot(hi.neu.resp.MAD, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.emo.resp.MAD.plot <- ggplot(hi.emo.resp.MAD, aes(Condition, MAD, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
lo.neu.resp.MAD.plot
lo.emo.resp.MAD.plot
hi.neu.resp.MAD.plot
hi.emo.resp.MAD.plot
t.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE) ### different
t.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE) ### trending
t.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
t.test(data$hi.emo.sur_n_MAD, data$hi.emo.sur_p_MAD, paired = TRUE) ### non-sig
### t-test for pos ratings vs. neg ratings
wilcox.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE) ### different
### t-test for pos ratings vs. neg ratings
wilcox.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE) ### different
wilcox.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE) ### trending
wilcox.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
wilcox.test(data$hi.emo.sur_n_MAD, data$hi.emo.sur_p_MAD, paired = TRUE) ### non-sig
t.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE) ### different
t.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE) ### trending
t.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
t.test(data$hi.emo.sur_n_MAD, data$hi.emo.sur_p_MAD, paired = TRUE) ### non-sig
lo.neu.resp.plot
### make long ###
lo.neu.resp <- gather(data, key = "Condition", value =  "ReactionTime",
lo.neu.sur_n_RT, lo.neu.sur_p_RT)
hi.neu.resp <- gather(data, key = "Condition", value =  "ReactionTime",
hi.neu.sur_n_RT, hi.neu.sur_p_RT)
hi.emo.resp <- gather(data, key = "Condition", value =  "ReactionTime",
hi.emo.sur_n_RT, hi.emo.sur_p_RT)
lo.neu.resp$Condition <- as.factor(lo.neu.resp$Condition)
hi.neu.resp$Condition <- as.factor(hi.neu.resp$Condition)
lo.neu.resp.plot <- ggplot(lo.neu.resp, aes(Condition, ReactionTime, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
lo.emo.resp.plot <- ggplot(lo.emo.resp, aes(Condition, ReactionTime, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.neu.resp.plot <- ggplot(hi.neu.resp, aes(Condition, ReactionTime, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
lo.emo.resp.plot <- ggplot(lo.emo.resp, aes(Condition, ReactionTime, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
lo.emo.resp <- gather(data, key = "Condition", value =  "ReactionTime",
lo.emo.sur_n_RT, lo.emo.sur_p_RT)
lo.emo.resp$Condition <- as.factor(lo.emo.resp$Condition)
lo.emo.resp.plot <- ggplot(lo.emo.resp, aes(Condition, ReactionTime, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.neu.resp.plot <- ggplot(hi.neu.resp, aes(Condition, ReactionTime, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.emo.resp.plot <- ggplot(hi.emo.resp, aes(Condition, ReactionTime, fill = as.factor(Condition))) +
geom_bar(stat = "summary", fun.y = "mean", na.rm = TRUE) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = .1)
hi.neu.resp.plot
wilcox.test(data$hi.neu.sur_n_RT, data$hi.neu.sur_p_RT, paired = TRUE)
t.test(data$lo.neu.sur_n_RT, data$lo.neu.sur_p_RT, paired = TRUE)
t.test(data$hi.neu.sur_n_RT, data$hi.neu.sur_p_RT, paired = TRUE)
t.test(data$lo.emo.sur_n_RT, data$lo.emo.sur_p_RT, paired = TRUE)
t.test(data$hi.emo.sur_n_RT, data$hi.emo.sur_p_RT, paired = TRUE)
lo.neu.resp.plot
hi.neu.resp.plot
lo.emo.resp.plot
hi.emo.resp.plot
wilcox.test(data$hi.neu.sur_n_RT, data$hi.neu.sur_p_RT, paired = TRUE)
wilcox.test(data$lo.emo.sur_n_RT, data$lo.emo.sur_p_RT, paired = TRUE)
wilcox.test(data$hi.emo.sur_n_RT, data$hi.emo.sur_p_RT, paired = TRUE)
### t-test for pos ratings vs. neg ratings
wilcox.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE) ### different
wilcox.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE) ### trending
wilcox.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
wilcox.test(data$hi.emo.sur_n_MAD, data$hi.emo.sur_p_MAD, paired = TRUE) ### non-sig
.05/4
### t-test for pos ratings vs. neg ratings
wilcox.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE) ### different
### assess for normality ###
shapiro.test(data$lo.neu.sur_n_MAD) ## normal
shapiro.test(data$lo.neu.sur_p_MAD) ## non-normal
shapiro.test(data$hi.neu.sur_n_MAD) ## barely normal (.058)
shapiro.test(data$hi.neu.sur_p_MAD) ## normal
shapiro.test(data$lo.emo.sur_n_MAD) ## non-normal
shapiro.test(data$lo.emo.sur_p_MAD) ## barely normal (.068)
shapiro.test(data$lo.emo.sur_n_MAD) ## non-normal
shapiro.test(data$lo.emo.sur_p_MAD) ## barely normal (.068)
shapiro.test(data$hi.emo.sur_n_MAD) ## non-normal
shapiro.test(data$hi.emo.sur_p_MAD) ## normal
t.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE) ### trending
wilcox.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE) ### trending
### t-test for pos ratings vs. neg ratings
wilcox.test(data$lo.neu.sur_n_MAD, data$lo.neu.sur_p_MAD, paired = TRUE) ### different
lo.neu.resp.MAD.plot
wilcox.test(data$hi.neu.sur_n_MAD, data$hi.neu.sur_p_MAD, paired = TRUE) ### trending
lo.emo.resp.MAD.plot
hi.neu.resp.MAD.plot
wilcox.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
t.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
wilcox.test(data$lo.emo.sur_n_MAD, data$lo.emo.sur_p_MAD, paired = TRUE) ### non-sig
wilcox.test(data$hi.emo.sur_n_MAD, data$hi.emo.sur_p_MAD, paired = TRUE) ### non-sig
lo.neu.resp.MAD.plot
hi.neu.resp.MAD.plot
lo.emo.resp.MAD.plot
hi.emo.resp.MAD.plot
